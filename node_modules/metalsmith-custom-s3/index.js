var AWS = require("aws-sdk");
var async = require("async");

/**
 * Expose `plugin`
 */
module.exports = plugin;

/**
 * Metalsmith plugin to write content to Amazon S3.
 *
 * @param {Object} options
 *   @property {Array} remove
 *   @property {String} bucket
 *   @property {Array} rename
 *   @property {String} region
 * @return {Function}
 */
function plugin(options) {
	return function(files, metalsmith, done) {
		setImmediate(done);

		// Remove files
		if (options["remove"]) {
			options["remove"].forEach(function(remove) {
				Object.keys(files).forEach(function(file) {
					if (file.match(remove)) {
						delete files[file];
					}
				});
			});
		}

		// Write params
		Object.keys(files).forEach(function(file) {

			// Bucket
			files[file]["params"] = { "Bucket": options["bucket"] };

			// Contents
			files[file]["params"]["Body"] = files[file]["contents"];

			// Content type
			var contentType = files[file]["mime"];

			if (contentType) {
				files[file]["params"]["ContentType"] = contentType;
			}

			// Cache control
			if (options["cached"]) {
				files[file]["params"]["CacheControl"] = options["cached"];
			}

			files[file]["params"]["Key"] = file;
		});

		// Create redirects
		if (options["create"]) {
			for (var file in options["create"]) {
				var fileOptions = options["create"][file];

				if (!fileOptions.hasOwnProperty("useNaked") || fileOptions["useNaked"]) {
					files[file] = {
						"params": {
							"Key": file,
							"Bucket": options["bucket"],
							"WebsiteRedirectLocation": fileOptions["locale"],
							"ContentType": "text/plain"
						}
					};
				}

				if (!fileOptions.hasOwnProperty("useHTML") || fileOptions["useHTML"]) {
					files[file+".html"] = {
						"params": {
							"Key": file+".html",
							"Bucket": options["bucket"],
							"WebsiteRedirectLocation": fileOptions["locale"],
							"ContentType": "text/plain"
						}
					};
				}

				if (!fileOptions.hasOwnProperty("usePHP") || fileOptions["usePHP"]) {
					files[file+".php"] = {
						"params": {
							"Key": file+".php",
							"Bucket": options["bucket"],
							"WebsiteRedirectLocation": fileOptions["locale"],
							"ContentType": "text/plain"
						}
					};
				}
			}
		}

		// Write to S3
		var s3 = new AWS.S3({ "region": options["region"] });

		async.waterfall([
			function(next) {
				async.each(Object.keys(files), function(file, callback) {
					s3.putObject(files[file]["params"], callback);
				}, function(error) {
					next(error, "write to S3 done");
				});
			}
		],
		function(error, result) {
			if (error) {
				throw new TypeError("Error: " + error);
			}

			done();
		});
	}
}